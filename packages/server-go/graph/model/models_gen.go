// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

// schema for account
type Account struct {
	ID        uuid.UUID  `json:"id"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	DeletedAt *time.Time `json:"deletedAt"`
	Name      *string    `json:"name"`
}

// schema for account
type AccountInfo struct {
	ID        uuid.UUID  `json:"id"`
	Name      *string    `json:"name"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

// schema for account
type AccountInfoInput struct {
	ID        uuid.UUID  `json:"id"`
	Name      *string    `json:"name"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

type AccountInfoUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []AccountInfo `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []AccountInfo `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

// schema for account
type AccountInput struct {
	ID        uuid.UUID  `json:"id"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	DeletedAt *time.Time `json:"deletedAt"`
	Name      *string    `json:"name"`
}

type AccountUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []Account `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []Account `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

// schema for blobinfos collection
type BlobInfo struct {
	Hash      string     `json:"hash"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	CreatedBy *uuid.UUID `json:"createdBy"`
	Type      string     `json:"type"`
	MimeType  string     `json:"mimeType"`
	Size      int        `json:"size"`
	Source    string     `json:"source"`
	Local     *bool      `json:"local"`
}

// schema for blobinfos collection
type BlobInfoInput struct {
	Hash      string     `json:"hash"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
	CreatedBy *uuid.UUID `json:"createdBy"`
	Type      string     `json:"type"`
	MimeType  string     `json:"mimeType"`
	Size      int        `json:"size"`
	Source    string     `json:"source"`
	Local     *bool      `json:"local"`
}

type BlobInfoUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []BlobInfo `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []BlobInfo `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

// schema holding documents
type Document struct {
	ID        uuid.UUID   `json:"id"`
	CreatedAt *time.Time  `json:"createdAt"`
	UpdatedAt *time.Time  `json:"updatedAt"`
	DeletedAt *time.Time  `json:"deletedAt"`
	CreatedBy *uuid.UUID  `json:"createdBy"`
	Type      string      `json:"type"`
	FileHash  *string     `json:"fileHash"`
	Meta      interface{} `json:"meta"`
	Local     *bool       `json:"local"`
}

// schema for document highlights
type DocumentHighlight struct {
	ID           uuid.UUID   `json:"id"`
	DocumentID   uuid.UUID   `json:"documentId"`
	DocumentType *string     `json:"documentType"`
	CreatedAt    *time.Time  `json:"createdAt"`
	UpdatedAt    *time.Time  `json:"updatedAt"`
	DeletedAt    *time.Time  `json:"deletedAt"`
	CreatedBy    *uuid.UUID  `json:"createdBy"`
	Content      interface{} `json:"content"`
	Location     interface{} `json:"location"`
	Sequence     string      `json:"sequence"`
	ImageHash    *string     `json:"imageHash"`
	Local        *bool       `json:"local"`
}

// schema for document highlights
type DocumentHighlightInput struct {
	ID           uuid.UUID   `json:"id"`
	DocumentID   uuid.UUID   `json:"documentId"`
	DocumentType *string     `json:"documentType"`
	CreatedAt    *time.Time  `json:"createdAt"`
	UpdatedAt    *time.Time  `json:"updatedAt"`
	DeletedAt    *time.Time  `json:"deletedAt"`
	CreatedBy    *uuid.UUID  `json:"createdBy"`
	Content      interface{} `json:"content"`
	Location     interface{} `json:"location"`
	Sequence     string      `json:"sequence"`
	ImageHash    *string     `json:"imageHash"`
	Local        *bool       `json:"local"`
}

type DocumentHighlightUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []DocumentHighlight `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []DocumentHighlight `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

// schema holding documents
type DocumentInput struct {
	ID        uuid.UUID   `json:"id"`
	CreatedAt *time.Time  `json:"createdAt"`
	UpdatedAt *time.Time  `json:"updatedAt"`
	DeletedAt *time.Time  `json:"deletedAt"`
	CreatedBy *uuid.UUID  `json:"createdBy"`
	Type      string      `json:"type"`
	FileHash  *string     `json:"fileHash"`
	Meta      interface{} `json:"meta"`
	Local     *bool       `json:"local"`
}

// schema holding account documents
type DocumentMember struct {
	ID         *string    `json:"id"`
	DocumentID uuid.UUID  `json:"documentId"`
	AccountID  uuid.UUID  `json:"accountId"`
	CreatedAt  *time.Time `json:"createdAt"`
	UpdatedAt  *time.Time `json:"updatedAt"`
	DeletedAt  *time.Time `json:"deletedAt"`
	AcceptedAt *time.Time `json:"acceptedAt"`
	Role       string     `json:"role"`
	CreatedBy  *uuid.UUID `json:"createdBy"`
	Local      *bool      `json:"local"`
}

// schema holding account documents
type DocumentMemberInput struct {
	ID         *string    `json:"id"`
	DocumentID uuid.UUID  `json:"documentId"`
	AccountID  uuid.UUID  `json:"accountId"`
	CreatedAt  *time.Time `json:"createdAt"`
	UpdatedAt  *time.Time `json:"updatedAt"`
	DeletedAt  *time.Time `json:"deletedAt"`
	AcceptedAt *time.Time `json:"acceptedAt"`
	Role       string     `json:"role"`
	CreatedBy  *uuid.UUID `json:"createdBy"`
	Local      *bool      `json:"local"`
}

type DocumentMemberUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []DocumentMember `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []DocumentMember `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

type DocumentUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []Document `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []Document `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

// schema for session
type Session struct {
	ID            uuid.UUID  `json:"id"`
	AccountID     uuid.UUID  `json:"accountId"`
	CreatedAt     *time.Time `json:"createdAt"`
	UpdatedAt     *time.Time `json:"updatedAt"`
	DeletedAt     *time.Time `json:"deletedAt"`
	SyncDocuments []*string  `json:"syncDocuments"`
}

// schema for session
type SessionInput struct {
	ID            uuid.UUID  `json:"id"`
	AccountID     uuid.UUID  `json:"accountId"`
	CreatedAt     *time.Time `json:"createdAt"`
	UpdatedAt     *time.Time `json:"updatedAt"`
	DeletedAt     *time.Time `json:"deletedAt"`
	SyncDocuments []*string  `json:"syncDocuments"`
}

type SessionUpdateResult struct {
	// list of updated documents that have been successfully processed
	Updated []Session `json:"updated"`
	// list of rejected documents, with current returned state
	Rejected []Session `json:"rejected"`
	// List of errors associated with rejected documents
	Errors []UpdateError `json:"errors"`
}

type UpdateError struct {
	// Id of the resource that failed update
	ID string `json:"id"`
	// Error string associated with upd
	Error *string `json:"error"`
}
